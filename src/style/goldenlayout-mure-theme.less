@import './colors.less';
@import './measurements.less';

// ".lm_dragging" is applied to BODY tag during Drag and is also directly applied to the root of the object being dragged

// Entire GoldenLayout Container, if a background is set, it is visible as color of "pane header" and "splitters" (if these latest has opacity very low)
.lm_goldenlayout {
  /* background: @backgroundGradient; */
}

// Single Pane content (area in which final dragged content is contained)
.lm_content {
  background: @darkestBackgroundColor;
  border: 1px solid transparent;
  border-radius: 0 @borderRadius @borderRadius @borderRadius;
}

// Single Pane content during Drag (style of moving window following mouse)
.lm_dragProxy {
  .lm_content {
    box-shadow: 0.25em 0.25em 2em fade(@shadowColor,90%);
  }
}

// Placeholder Container of target position
.lm_dropTargetIndicator {
  box-shadow: inset 0 0 1em @shadowColor;
  outline: 1px dashed @accentColor;

  // Inner Placeholder
  .lm_inner {
    background: @backgroundGradient;
    opacity: 0.5;
  }
}

// Separator line (handle to change pane size)
.lm_splitter {
  background: desaturate(@accentColor, 5%);
  opacity: 0.001;
  transition: opacity 200ms ease;

  &:hover, // When hovered by mouse...
  &.lm_dragging {
    background: @accentColor;
    opacity: 1;
  }
}

// Pane Header (container of Tabs for each pane)
.lm_header {
  height: @titleBarSize;

  // Single Tab container. A single Tab is set for each pane, a group of Tabs are contained in ".lm_header"
  .lm_tab {
    position: relative;
    font-family: 'Josefin Sans', sans-serif;
    font-size: @titleBarFontSize;
    letter-spacing: 2px;
    text-transform: uppercase;
    background: @darkBackgroundColor;

    .lm_title {
      padding-top: @titleBarFontPadding;
    }

    // Close Tab Icon
    .lm_close_tab {
      width: @titleBarSize;
      height: @titleBarSize;
      background-image: data-uri('../img/ex.svg');
      background-size: @titleBarButtonSize;
      background-position: left center;
      background-repeat: no-repeat;
      opacity: 0.1;

      &:hover {
        opacity: 1;
        filter: @accentImageFilter;
      }
    }

    // If Tab is active, so if it's in foreground
    &.lm_active {
      background: @darkestBackgroundColor;
    }
  }
  .lm_tabs > .lm_tab {
    // The tab is docked (i.e. not in the dropdown menu)
    border-radius: @borderRadius @borderRadius 0 0;
  }
  .lm_tabdropdown_list > .lm_tab {
    // The tab is in the dropdown menu
    white-space: nowrap;
  }
}

// If Pane Header (container of Tabs for each pane) is selected (used only if addition of new Contents is made "by selection" and not "by drag")
.lm_selected {
  .lm_header {
    background-color: @darkAccentColor;
  }
}

.lm_tab {
  &:hover, // If Tab is hovered
  &.lm_active // If Tab is active, so if it's in foreground
  {
    background: @darkestBackgroundColor;
  }
}

// Dropdown arrow for additional tabs when too many to be displayed
.lm_header .lm_controls .lm_tabdropdown:before {
  color: white;
}

// Pane controls (popout, maximize, minimize, close)
.lm_controls {
  // All Pane controls shares these
  > li {
    position: relative;
    background-size: @titleBarButtonSize;
    background-position: center center;
    background-repeat: no-repeat;
    opacity: 0.4;

    &:hover {
      opacity: 1;
      filter: @accentImageFilter;
    }
  }

  // Icon to PopOut Pane, so move it to a different Browser Window
  .lm_popout {
    background-image: data-uri('../img/popWindowOut.svg');
  }

  // Icon to Maximize Pane, so it will fill the entire GoldenLayout Container
  .lm_maximise {
    background-image: data-uri('../img/maximize.svg');
  }

  // Icon to Close Pane and so remove it from GoldenLayout Container
  .lm_close {
    background-image: data-uri('../img/ex.svg');
  }
}

// If a specific Pane is maximized
.lm_maximised {
  // Pane Header (container of Tabs for each pane) can have different style when is Maximized
  .lm_header {
    background: @backgroundGradient;
    opacity: 1;
  }

  // Pane controls are different in Maximized Mode, especially the old Icon "Maximise" that now has a different meaning, so "Minimize" (even if CSS Class did not change)
  .lm_controls {
    .lm_maximise {
      background-image: data-uri('../img/minimize.svg');
    }
  }
}

.lm_transition_indicator {
  background-color: @darkestBackgroundColor;
  border: 1px dashed @darkBackgroundColor;
}

// If a specific Pane is Popped Out, so move it to a different Browser Window, Icon to restore original position is:
.lm_popin {
  cursor: pointer;

  // Background of Icon
  .lm_bg {
    background: @backgroundGradient;
    opacity: 0.3;
  }

  // Icon to Restore original position in Golden Layout Container
  .lm_icon {
    background-image: data-uri('../img/popWindowIn.svg');
    background-size: @titleBarButtonSize;
    background-position: center center;
    background-repeat: no-repeat;
    opacity: 0.7;
  }

  &:hover {
    .lm_icon {
      opacity: 1;
    }
  }
}
